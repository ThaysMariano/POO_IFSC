/*
 * This source file was generated by the Gradle 'init' task
 */
package ads.poo;

public class App {

    public static void main(String[] args) {
        if(checarArgumentos(args, 0)){
            switch (args[0].toLowerCase()) {
                case "triângulo","triangulo":
                    if(checarArgumentos(args, 1)) {
                        gerarTriangulo(Integer.parseInt(args[1]));
                    }
                    break;
                case "losango":
                    if(checarArgumentos(args,2)) {
                        gerarLosango(Integer.parseInt(args[1]));
                    }
                    break;
                case "retangulo", "retângulo":
                    if(checarArgumentos(args,3)) {
                        gerarRetangulo(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
                    }
                    break;
                case "help":
                    gerarHelp(0);
                    break;
                default:
                    gerarHelp(1);
                    break;
            }
        }
    }

    public static void gerarTriangulo(int altura) {
        for (int i = 0; i < altura; i++) {
            for (int j = 0; j <= i; j++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }

    public static void gerarLosango(int altura) {
        for (int i = 1; i <= altura; i++) {
            if (i % 2 == 1) {
                for (int j = 0; j < (altura - i) / 2; j++) {
                    System.out.print(" ");
                }
                for (int j = 0; j < i; j++) {
                    System.out.print("*");
                }
                System.out.println();
            }
        }
        for (int i = altura - 1; i > 0; i--) {
            if (impar(i)) {
                for (int j = 0; j < (altura - i) / 2; j++) {
                    System.out.print(" ");
                }
                for (int j = 0; j < i; j++) {
                    System.out.print("*");
                }
                System.out.println();
            }
        }
    }

    public static void gerarRetangulo(int largura, int altura) {
        for (int i = 1; i <= altura; i++) {
            if (i == 1 || i == altura) {
                for (int j = 0; j < largura; j++) {
                    System.out.print("*");
                }
                System.out.println();
            } else {
                System.out.print("*");
                for (int j = 1; j <= largura - 2; j++) {
                    System.out.print(" ");
                }
                System.out.println("*");
            }
        }
    }

    public static void gerarHelp(int erroIndex) {
        switch (erroIndex) {
            case 0:
                System.out.println("""
                        -- GERAR TRIÂNGULO --
                        "triangulo ou triângulo <altura do triângulo>"
                         - altura mínima é 3.
                         - só aceita um parâmetro
                        
                        -- GERAR LOSANGO --
                        "losango <altura do losango>"
                         - altura mínima é 3.
                         - altura deve ser ímpar.
                         - só aceita um parâmetro
                         
                        -- GERAR RETÂNGULO --
                        "retangulo ou retângulo <largura do retângulo> <altura do retângulo>"
                         - altura mínima é 3
                         - largura mínima é 3
                         - precisa de dois parâmetros
                        """);
                break;
            case 1:
                System.out.println("Nenhum comando reconhecido, tente help para ajuda na sintaxe");
                break;
            case 2:
                System.out.println("Argumentos insuficente para a figura, a figura precisa de um argumento, tente help para ajuda na sintaxe");
                break;
            case 3:
                System.out.println("Argumentos excedentes para a figura, a figura só aceita um argumento, tente help para ajuda na sintaxe");
                break;
            case 4:
                System.out.println("Tamanho inválido, tamanho mínimo é 3");
                break;
            case 5:
                System.out.println("Altura do losango precisa ser um valor ímpar");
                break;
            case 6:
                System.out.println("Argumentos insuficente para a figura, a figura precisa de dois argumento, tente help para ajuda na sintaxe");
                break;
            case 7:
                System.out.println("Argumentos excedentes para a figura, a figura só aceita dois argumento, tente help para ajuda na sintaxe");
                break;
        }
    }

    public static boolean impar(int valor) {
        return valor % 2 == 1;
    }

    public static boolean checarArgumentos(String[] args, int index) {
        boolean valido = true;
        switch (index) {
            case 0:
                if (args.length == 0) {
                    valido = false;
                    gerarHelp(1);
                }
                break;
            case 1:
                if (args.length < 2) {
                    valido = false;
                    gerarHelp(2);
                } else if (args.length > 2) {
                    valido = false;
                    gerarHelp(3);
                } else if (Integer.parseInt(args[1]) < 3) {
                    valido = false;
                    gerarHelp(4);
                }
                break;
            case 2:
                if (args.length < 2) {
                    valido = false;
                    gerarHelp(2);
                } else if (args.length > 2){
                    valido = false;
                    gerarHelp(3);
                } else if (Integer.parseInt(args[1]) < 3) {
                    valido = false;
                    gerarHelp(4);
                } else if (!impar(Integer.parseInt(args[1]))) {
                    valido = false;
                    gerarHelp(5);
                }
                break;
            case 3:
                if (args.length < 3) {
                    valido = false;
                    gerarHelp(6);
                } else if (args.length > 3) {
                    valido = false;
                    gerarHelp(7);
                } else if (Integer.parseInt(args[1]) < 3 || Integer.parseInt(args[2]) < 3) {
                    valido = false;
                    gerarHelp(4);
                }
                break;
        }
        return valido;
    }

}
